@using System.Globalization
@inject IStringLocalizer<ProductsSlider> localizer

<div class="featured-products-panel bg-light">
    @if (isLoading)
    {

        <h2>@LoadingProductsCaption</h2>
        <br />
        <br />
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;"></div>
        </div>
    }
    else if (areAvailableProducts)
    {
        <p>@ProductsAvailabilityStatus</p>
    }
    else
    {

        <h2>@SliderTitle</h2>
        <br />
        <div class="swiper-container featured-products-slider">
            <div class="swiper-wrapper">
                @ChildContent
            </div>
            <!-- Swiper navigation buttons -->
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
            <!-- Swiper pagination -->
            <div class="swiper-pagination"></div>
        </div>
    }
</div>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string SliderTitle { get; set; }

    [Parameter]
    public string LoadingProductsCaption { get; set; }

    [Parameter]
    public string ProductsAvailabilityStatus { get; set; }

    private bool isLoading = true;
    private bool isInitialized = false;
    private bool areAvailableProducts = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void HandleValueChanged(ValueTuple<bool,bool,bool> arg)
    {
        // Update the received value from the child component
        isLoading = arg.Item1;
        isInitialized = arg.Item2;
        areAvailableProducts = arg.Item3;
    }
}

