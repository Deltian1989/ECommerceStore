@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@inject IStringLocalizer<NavBar> localizer

<nav class="navbar navbar-expand-lg bg-primary" data-bs-theme="dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">E-Commerce</a>
        <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="navbar-collapse collapse" id="navbarColor01">
            <div class="mx-lg-auto w-50">
                <form class="d-flex">
                    <div class="input-group">
                        <input type="search" class="form-control" placeholder="@localizer["SearchBarPlaceholderSearch"]" data-bs-theme="light" aria-label="@localizer["SearchButtonAriaLabelSearch"]" aria-describedby="button-addon2">
                        <div data-lastpass-icon-root="" style="position: relative !important; height: 0px !important; width: 0px !important; float: left !important;"></div><button class="btn btn-light my-2 my-sm-0" type="submit" id="button-addon2">@localizer["SearchButtonTextSearch"]</button>
                    </div>
                </form>
            </div>
            <ul class="navbar-nav">
                
                <li class="nav-item me-2">
                    <a class="nav-link" href="/favorites"><i class="fa-regular fa-lg fa-heart"></i><span class="d-lg-none ms-2">@localizer["NavbarLinkTitleFavorites"]</span></a>
                </li>
                <li class="nav-item me-2">
                    <a class="nav-link" href="/notifications"><i class="fa-regular fa-lg fa-bell"></i><span class="d-lg-none ms-2">@localizer["NavbarLinkTitleNotifications"]</span></a>
                </li>
                <li class="nav-item me-2">
                    <a class="nav-link" href="/basket"><i class="fa fa-lg fa-basket-shopping"></i><span class="d-lg-none ms-2">@localizer["NavbarLinkTitleBasket"]</span></a>
                </li>
                <li class="nav-item dropdown" data-bs-theme="light">
                    <a class="nav-link dropdown-toggle d-flex align-items-center" href="javascript:void(0)" id="theme-menu" aria-expanded="false" data-bs-toggle="dropdown" data-bs-display="static" aria-label="@localizer["NavbarDropdownAriaLabelLanguage"]">
                        <div class="language-flag-icon selected-language-icon @CurrentFlagCssClass"></div>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li>
                            <button type="button" class="dropdown-item" data-bs-theme-value="light" aria-pressed="false">
                                <div class="language-flag-icon language-flag-english-icon"></div> English
                            </button>
                        </li>
                        <li>
                            <button type="button" class="dropdown-item" data-bs-theme-value="dark" aria-pressed="true">
                                <div class="language-flag-icon language-flag-polish-icon"></div> Polski
                            </button>
                        </li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/login">@localizer["NavbarLinkSignIn"]</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string CurrentFlagCssClass { get; set; } = "language-flag-english-icon"; // Default flag

    protected override async Task OnInitializedAsync()
    {
        // var lang = await JSRuntime.InvokeAsync<string>("getCookie", "lang");
        // if (!string.IsNullOrEmpty(lang))
        // {
        //     SetLanguage(lang);
        // }
    }

    private async Task OnLanguageChanged(ChangeEventArgs e)
    {
        var culture = e.Value.ToString();
        
        await JSRuntime.InvokeVoidAsync("setCookie", "lang", culture, 30);

        SetLanguage(culture);
        
        navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
    }

    private void SetLanguage(string lang)
    {
        switch (lang)
        {
            case "en":
                CurrentFlagCssClass = "language-flag-english-icon";
                break;
            case "pl":
                CurrentFlagCssClass = "language-flag-english-icon";
                break;
            default:
                CurrentFlagCssClass = "language-flag-english-icon";
                break;
        }
    }
}
